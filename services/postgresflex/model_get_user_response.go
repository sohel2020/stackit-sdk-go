/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the GetUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserResponse{}

// GetUserResponse struct for GetUserResponse
type GetUserResponse struct {
	ConnectionString UserResponseGetConnectionStringAttributeType `json:"connectionString,omitempty"`
	Host             UserResponseGetHostAttributeType             `json:"host,omitempty"`
	Id               UserResponseGetIdAttributeType               `json:"id,omitempty"`
	Port             UserResponseGetPortAttributeType             `json:"port,omitempty"`
	Roles            UserResponseGetRolesAttributeType            `json:"roles,omitempty"`
	Status           UserResponseGetStatusAttributeType           `json:"status,omitempty"`
	Username         UserResponseGetUsernameAttributeType         `json:"name,omitempty"`
}

// NewGetUserResponse instantiates a new GetUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserResponse() *GetUserResponse {
	this := GetUserResponse{}
	return &this
}

// NewGetUserResponseWithDefaults instantiates a new GetUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserResponseWithDefaults() *GetUserResponse {
	this := GetUserResponse{}
	return &this
}

// GetConnectionString returns the ConnectionString field value if set, zero value otherwise.
func (o *GetUserResponse) GetConnectionString() (res UserResponseGetConnectionStringRetType) {
	res, _ = o.GetConnectionStringOk()
	return
}

// GetConnectionStringOk returns a tuple with the ConnectionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetConnectionStringOk() (ret UserResponseGetConnectionStringRetType, ok bool) {
	return getUserResponseGetConnectionStringAttributeTypeOk(o.ConnectionString)
}

// SetConnectionString gets a reference to the given string and assigns it to the ConnectionString field.
func (o *GetUserResponse) SetConnectionString(v UserResponseGetConnectionStringRetType) {
	setUserResponseGetConnectionStringAttributeType(&o.ConnectionString, v)
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *GetUserResponse) GetHost() (res UserResponseGetHostRetType) {
	res, _ = o.GetHostOk()
	return
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetHostOk() (ret UserResponseGetHostRetType, ok bool) {
	return getUserResponseGetHostAttributeTypeOk(o.Host)
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *GetUserResponse) SetHost(v UserResponseGetHostRetType) {
	setUserResponseGetHostAttributeType(&o.Host, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetUserResponse) GetId() (res UserResponseGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetIdOk() (ret UserResponseGetIdRetType, ok bool) {
	return getUserResponseGetIdAttributeTypeOk(o.Id)
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetUserResponse) SetId(v UserResponseGetIdRetType) {
	setUserResponseGetIdAttributeType(&o.Id, v)
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GetUserResponse) GetUsername() (res UserResponseGetUsernameRetType) {
	res, _ = o.GetUsernameOk()
	return
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetUsernameOk() (ret UserResponseGetUsernameRetType, ok bool) {
	return getUserResponseGetUsernameAttributeTypeOk(o.Username)
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GetUserResponse) SetUsername(v UserResponseGetUsernameRetType) {
	setUserResponseGetUsernameAttributeType(&o.Username, v)
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *GetUserResponse) GetPort() (res UserResponseGetPortRetType) {
	res, _ = o.GetPortOk()
	return
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetPortOk() (ret UserResponseGetPortRetType, ok bool) {
	return getUserResponseGetPortAttributeTypeOk(o.Port)
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *GetUserResponse) SetPort(v UserResponseGetPortRetType) {
	setUserResponseGetPortAttributeType(&o.Port, v)
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *GetUserResponse) GetRoles() (res UserResponseGetRolesRetType) {
	res, _ = o.GetRolesOk()
	return
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetRolesOk() (ret UserResponseGetRolesRetType, ok bool) {
	return getUserResponseGetRolesAttributeTypeOk(o.Roles)
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *GetUserResponse) SetRoles(v UserResponseGetRolesRetType) {
	setUserResponseGetRolesAttributeType(&o.Roles, v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetUserResponse) GetStatus() (res UserResponseGetStatusRetType) {
	res, _ = o.GetStatusOk()
	return
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetStatusOk() (ret UserResponseGetStatusRetType, ok bool) {
	return getUserResponseGetStatusAttributeTypeOk(o.Status)
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetUserResponse) SetStatus(v UserResponseGetStatusRetType) {
	setUserResponseGetStatusAttributeType(&o.Status, v)
}

func (o GetUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUserResponseGetConnectionStringAttributeTypeOk(o.ConnectionString); ok {
		toSerialize["connectionString"] = val
	}
	if val, ok := getUserResponseGetHostAttributeTypeOk(o.Host); ok {
		toSerialize["host"] = val
	}
	if val, ok := getUserResponseGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["id"] = val
	}
	if val, ok := getUserResponseGetUsernameAttributeTypeOk(o.Username); ok {
		toSerialize["name"] = val
	}
	if val, ok := getUserResponseGetPortAttributeTypeOk(o.Port); ok {
		toSerialize["port"] = val
	}
	if val, ok := getUserResponseGetRolesAttributeTypeOk(o.Roles); ok {
		toSerialize["roles"] = val
	}
	if val, ok := getUserResponseGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["status"] = val
	}
	return toSerialize, nil
}

type NullableGetUserResponse struct {
	value *GetUserResponse
	isSet bool
}

func (v NullableGetUserResponse) Get() *GetUserResponse {
	return v.value
}

func (v *NullableGetUserResponse) Set(val *GetUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserResponse(val *GetUserResponse) *NullableGetUserResponse {
	return &NullableGetUserResponse{value: val, isSet: true}
}

func (v NullableGetUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
