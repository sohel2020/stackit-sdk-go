/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the UpdateUserPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserPayload{}

/*
	types and functions for database
*/

// isNotNullableString
type UpdateUserPayloadGetUsernameAttributeType = *string

func getUpdateUserPayloadGetUsernameAttributeTypeOk(arg UpdateUserPayloadGetUsernameAttributeType) (ret UpdateUserPayloadGetUsernameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateUserPayloadGetUsernameAttributeType(arg *UpdateUserPayloadGetUsernameAttributeType, val UpdateUserPayloadGetUsernameRetType) {
	*arg = &val
}

type UpdateUserPayloadGetDatabaseArgType = string
type UpdateUserPayloadGetUsernameRetType = string

/*
	types and functions for roles
*/

// isArray
type UpdateUserPayloadGetRolesAttributeType = *[]string
type UpdateUserPayloadGetRolesArgType = []string
type UpdateUserPayloadGetRolesRetType = []string

func getUpdateUserPayloadGetRolesAttributeTypeOk(arg UpdateUserPayloadGetRolesAttributeType) (ret UpdateUserPayloadGetRolesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateUserPayloadGetRolesAttributeType(arg *UpdateUserPayloadGetRolesAttributeType, val UpdateUserPayloadGetRolesRetType) {
	*arg = &val
}

// UpdateUserPayload struct for UpdateUserPayload
type UpdateUserPayload struct {
	Username UpdateUserPayloadGetUsernameAttributeType `json:"name,omitempty"`
	Roles    UpdateUserPayloadGetRolesAttributeType    `json:"roles,omitempty"`
}

// NewUpdateUserPayload instantiates a new UpdateUserPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserPayload() *UpdateUserPayload {
	this := UpdateUserPayload{}
	return &this
}

// NewUpdateUserPayloadWithDefaults instantiates a new UpdateUserPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserPayloadWithDefaults() *UpdateUserPayload {
	this := UpdateUserPayload{}
	return &this
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *UpdateUserPayload) GetDatabase() (res UpdateUserPayloadGetUsernameRetType) {
	res, _ = o.GetDatabaseOk()
	return
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPayload) GetDatabaseOk() (ret UpdateUserPayloadGetUsernameRetType, ok bool) {
	return getUpdateUserPayloadGetUsernameAttributeTypeOk(o.Username)
}

// HasDatabase returns a boolean if a field has been set.
func (o *UpdateUserPayload) HasDatabase() bool {
	_, ok := o.GetDatabaseOk()
	return ok
}

// SetDatabase gets a reference to the given string and assigns it to the Database field.
func (o *UpdateUserPayload) SetDatabase(v UpdateUserPayloadGetUsernameRetType) {
	setUpdateUserPayloadGetUsernameAttributeType(&o.Username, v)
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *UpdateUserPayload) GetRoles() (res UpdateUserPayloadGetRolesRetType) {
	res, _ = o.GetRolesOk()
	return
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPayload) GetRolesOk() (ret UpdateUserPayloadGetRolesRetType, ok bool) {
	return getUpdateUserPayloadGetRolesAttributeTypeOk(o.Roles)
}

// HasRoles returns a boolean if a field has been set.
func (o *UpdateUserPayload) HasRoles() bool {
	_, ok := o.GetRolesOk()
	return ok
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *UpdateUserPayload) SetRoles(v UpdateUserPayloadGetRolesRetType) {
	setUpdateUserPayloadGetRolesAttributeType(&o.Roles, v)
}

func (o UpdateUserPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateUserPayloadGetUsernameAttributeTypeOk(o.Username); ok {
		toSerialize["Username"] = val
	}
	if val, ok := getUpdateUserPayloadGetRolesAttributeTypeOk(o.Roles); ok {
		toSerialize["Roles"] = val
	}
	return toSerialize, nil
}

type NullableUpdateUserPayload struct {
	value *UpdateUserPayload
	isSet bool
}

func (v NullableUpdateUserPayload) Get() *UpdateUserPayload {
	return v.value
}

func (v *NullableUpdateUserPayload) Set(val *UpdateUserPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserPayload(val *UpdateUserPayload) *NullableUpdateUserPayload {
	return &NullableUpdateUserPayload{value: val, isSet: true}
}

func (v NullableUpdateUserPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
